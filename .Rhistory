sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="../../Resources/sardines.csv")
sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read_csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="Resources/sardines.csv")
load("C:/Users/Kids' PC/Desktop/Live class work/Module 15/2/Activities/03-Stu_Sardines/Unsolved/sardines_starter.R")
sardines <- read.csv(file="Resources/sardines.csv")
sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="/Resources/sardines.csv")
sardines <- read.csv(file="..//Resources//sardines.csv")
sardines <- read.csv(file="sardines.csv")
load("C:/Users/Kids' PC/Desktop/Live class work/Module 15/2/Activities/05-Stu_ANOVA/Unsolved/hair_anova.R")
load("C:/Users/Kids' PC/Desktop/Live class work/Module 15/2/Activities/05-Stu_ANOVA/Unsolved/hair_anova_starter.R")
setwd("C:/Users/Kids' PC/Desktop/Live class work/Module 15/2/Activities/05-Stu_ANOVA")
setwd("C:/Users/Kids' PC/Desktop/Live class work/Module 15/2/Activities/05-Stu_ANOVA/Unsolved")
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(haircolor),y=Pain)) + geom_boxplot()
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairEyeColor),y=Pain)) + geom_boxplot()
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColor),y=Pain)) + geom_boxplot()
# Determine the p-value using ANOVA
aov(Pain ~ factor(HairColor), data=hair)
# Determine the p-value using ANOVA
aov(Pain ~ factor(HairColour), data=hair)
summary(aov(Pain ~ factor(HairColour), data=hair))
library(tidyverse)
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColor),y=Pain)) + geom_boxplot()
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColour),y=Pain)) + geom_boxplot()
setwd("C:/Users/Kids' PC/Desktop/Bootcamp HW/MechaCar_Statistical_Analysis")
library(dplyr)
MechaCar <- read.csv(file="MechaCar_mpg.csv")
View(MechaCar)
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd ,data=MechaCar) #generate multiple linear regression model
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD ,data=MechaCar) #generate multiple linear regression model
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, AWD ,data=MechaCar) #generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)
)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)) #generate summary statistics
source("C:/Users/Kids' PC/Desktop/Bootcamp HW/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
install.packages("knitr")
install.packages("rmarkdown")
library(dplyr) # import libraries
MechaCar <- read.csv(file="MechaCar_mpg.csv") # read in csv
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)) #generate summary statistics
Suspension_coil <- read.csv(file="Suspension_Coil.csv") # read in csv
#summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n()
summarize(Suspension_coil)
summarize(Mean=mean(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median=Median(PSI), Var=Var(PSI), STD=STD(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), STD=stderr(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df <- Suspension_coil %>% group_by(Manufacturing_Lot) %/% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df_lot <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
View(summarize_df_lot)
View(summarize_df_lot)
?t.test()
t.test(suspension_coil$PSI, mu=1500) #compare population means
t.test(Suspension_coil$PSI, mu=1500) #compare population means
?subset()
t.test(Suspension_coil$PSI %>% subset(Suspension_coil, Manufacturing_Lot = Lot1), mu=1500) #compare population means
t.test(Suspension_coil$PSI %>% subset(Manufacturing_Lot = Lot1), mu=1500) #compare population means
t.test(Suspension_coil$PSI %>% subset(., Manufacturing_Lot = Lot1), mu=1500) #compare population means
t.test(Suspension_coil$PSI %>% subset(., Suspension_Coil$Manufacturing_Lot = Lot1), mu=1500) #compare population means
t.test(Suspension_coil$PSI %>% subset(., Suspension_Coil$Manufacturing_Lot = "Lot1"), mu=1500) #compare population means
summarize(t.test(Suspension_coil$PSI, mu=1500)) #compare population means
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
#t.test(Suspension_coil$PSI %>% subset(., Suspension_Coil$Manufacturing_Lot = "Lot1"), mu=1500) #compare population means
View(Lot1)
View(Lot1)
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
t.test(Lot1$PSI, mu=1500) #compare samle to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
library(dplyr) # import libraries
MechaCar <- read.csv(file="MechaCar_mpg.csv") # read in csv
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)) #generate summary statistics
Suspension_coil <- read.csv(file="Suspension_Coil.csv") # read in csv
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df_lot <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
t.test(Suspension_coil$PSI, mu=1500) #compare sample to population means
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
library(dplyr) # import libraries
MechaCar <- read.csv(file="MechaCar_mpg.csv") # read in csv
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)) #generate summary statistics
Suspension_coil <- read.csv(file="Suspension_Coil.csv") # read in csv
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df_lot <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
t.test(Suspension_coil$PSI, mu=1500) #compare sample to population means
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
library(dplyr) # import libraries
MechaCar <- read.csv(file="MechaCar_mpg.csv") # read in csv
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar)) #generate summary statistics
Suspension_coil <- read.csv(file="Suspension_Coil.csv") # read in csv
summarize_df <- Suspension_coil %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
summarize_df_lot <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median= median(PSI), Var= var(PSI), Std = sd(PSI))
t.test(Suspension_coil$PSI, mu=1500) #compare sample to population means
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
View(summarize_df)
View(summarize_df)
View(summarize_df_lot)
View(summarize_df_lot)
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot = "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
View(Lot3)
View(Lot3)
View(Lot2)
View(Lot2)
View(Lot1)
View(Lot1)
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
Lot1 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot1")
t.test(Lot1$PSI, mu=1500) #compare sample to population means
Lot2 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot2")
t.test(Lot2$PSI, mu=1500) #compare sample to population means
Lot3 <- subset.data.frame(Suspension_coil, Manufacturing_Lot == "Lot3")
t.test(Lot3$PSI, mu=1500) #compare sample to population means
View(Lot1)
View(Lot2)
View(Lot3)
View(MechaCar)
View(Suspension_coil)
